Задание 7
-----------------------------------------------------------------------------------------------------------
Парсер пакетных команд
------------------------------------------------------------------------------------------------------------
Создаем утилиту для парсинга и комплексного логирования пакетных команд. 
Стремимся к снижению зависимостей между модулями.

Разработать программу для пакетной обработки команд.

Команды считываются построчно из стандартного ввода и обрабатываются блоками по N команд. 
Одна команда - одна строка, конкретное значение роли не играет. 
Если данные закончились - блок завершается принудительно. 
Параметр N передается как единственный параметр командной строки в виде целого числа.

Логика работы для статических блоков (в примере N == 3):
---------------------------------------------------------------------
    Ввод     |       Вывод           |     Комментарий
---------------------------------------------------------------------
 cmd1        |                       |
 cmd2        |                       |
 cmd3        |                       |
             | bulk: cmd1, cmd2, cmd3| Блок завершен - выводим блок   
 cmd4        |                       |
 cmd5        |                       |
 EOF         |                       |
             | bulk: cmd4, cmd5      | Конец ввода - принудительно
                                       завершаем блок 

Размер блока можно изменить динамически, если перед началом блока и сразу после дать команды { и } 
соответственно. Предыдущий пакет при этом принудительно завершается. Такие блоки могут быть включены 
друг в друга при этом вложенные команды { и } игнорируются (но не сами блоки). Если данные закончились 
внутри динамического блока, весь динамический блок игнорируется.

Логика работы для динамического размера блоков (в примере N == 3):

---------------------------------------------------------------------
    Ввод     |       Вывод           |     Комментарий
---------------------------------------------------------------------
 cmd1        |                       |
 cmd2        |                       |
 {           |                       |
             | bulk: cmd1, cmd2      | начало динамического блока
                                       выводим предыдущий
                                       статический досрочно
 cmd3        |                       |
 cmd4        |                       |
 }           |                       |
             | bulk: cmd3, cmd4      | Конец динамического блока -
                                       выводим
 {           |                       |
 cmd5        |                       |
 cmd6        |                       |                                        
 {           |                       |
 cmd7        |                       |
 cmd8        |                       |                                        
 }           |                       |
 cmd9        |                       |
 }           |                       |
             | bulk: cmd5, cmd6,      | Конец динамического блока -
               cmd7, cmd8, cmd9        выводим                                         
 
 EOF         |                       |
 {           |                       |
 cmd10       |                       |
 cmd11       |                       |       
 EOF         |                       |
             |                       | Конец ввода - динамический
                                       блок игнорируется, не выводим. 

Вместе с выводом в консоль блоки должны сохранятся в отдельные файлы с именами
bulk1517223860.log , где 1517223860 - это время получения первой команды из блока. 
По одному файлу на блок.                                       

------------------------------------------------------------------------------------------------------------
Требования к реализации
Бинарный файл должен называться bulk.
------------------------------------------------------------------------------------------------------------
Проверка

Задание считается выполненным успешно, если после установки пакета и запуска 
с тестовыми данными вывод соответствует описанию. Данные подаются на стандартный 
вход построчно с паузой в 1 секунду для визуального контроля.
Будет отмечена низкая связанность обработки данных, накопления пачек команд, 
вывода в консоль и сохранения в файлы.

------------------------------------------------------------------------------------------------------------
2. На acm.timus.ru решить 3 любые задачи с уровнем сложности от 201 до 300.
Отсортированный по сложности список:
http://acm.timus.ru/problemset.aspx?space=1&page=all&skipac=False&sort=difficulty
Если выбрать сложно, есть ещё списки задач по темам (ближе к концу страницы):
http://acm.timus.ru/problemset.aspx

------------------------------------------------------------------------------------------------------------
Сделать ревью решений ДЗ-05 двух коллег (которые его выполнили).
------------------------------------------------------------------------------------------------------------
Опционально: сделать ревью на РЕВЬЮ ДЗ-05 (отзыв о выполненном ревью).
------------------------------------------------------------------------------------------------------------
Отправить на проверку в "Чат с преподавателем":
ссылку на свой репозиторий на guthub.com с реализованным проектом и настроенным workflow для github actions с историей успешных сборок;
ссылку на аккаунт на acm.timus.ru со списком принятых задач
ссылки на выполненные ревью
------------------------------------------------------------------------------------------------------------
Критерии оценки:
Реализованный функционал удовлетворяет требованиям задания;
Код модульный и слабо связный.
